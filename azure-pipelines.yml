# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest
name: 1.0$(Rev:r)
jobs:
- job: Build
  displayName: Build the solution
  steps:   
  - task: DotNetCoreCLI@2
    displayName: dotnet restore
    inputs:
      command: 'restore'
      projects: '**/*.csproj'
      feedsToUse: 'select'
      vstsFeed: 'd1699579-772c-479f-8d22-bc1c1264e4e3/5873eaff-435b-406e-8f83-9e0546e4ac56'
  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      command: 'build'
      projects: '**/*.csproj'
- job: CreateNugetPackage
  displayName: Create nuget package
  dependsOn: Build
  condition: succeeded()
  steps:
  - task: DotNetCoreCLI@2
    displayName: dotnet pack
    inputs:
      command: 'pack'
      packagesToPack: '**/APICore.csproj'
      versioningScheme: 'byBuildNumber'
  - task: DotNetCoreCLI@2
    displayName: dotnet push
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'd1699579-772c-479f-8d22-bc1c1264e4e3/5873eaff-435b-406e-8f83-9e0546e4ac56'
  - task: PublishBuildArtifacts@1
    displayName: publish artifact
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      TargetPath: '\\APICore\$(Build.DefinationName)\$(Build.BuildNumber)'
      publishLocation: 'Container'